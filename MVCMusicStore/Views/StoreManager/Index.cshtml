@model IEnumerable<MVCMusicStore.Models.Album>

@helper Truncate(string input, int length)
{
	//This helper method takes a string and a maximum length to allow
	if (input.Length <= length)
	{
		@input
	}
	else
	{
		@input.Substring(0, length)<text>...</text>
	}
}

@{
	ViewBag.Title = "Index";
}

<link href="https://cdn.datatables.net/1.10.20/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js"></script>

<script>
	$(document).ready(function () {
		$('#table').DataTable();
	});
</script>

<h2>Quản lý cửa hàng</h2>

<input type="button" class="btn btn-success" value="Thêm" onclick="location.href='@Url.Action("Create")'" />

<div style="margin-top:10px;">
	<table class="table table-hover" id="table" cellspacing="0">
		<thead>
			<tr>
				<th>
					@Html.DisplayNameFor(model => model.Genre)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Artist)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Title)
				</th>
				<th>
					@Html.DisplayNameFor(model => model.Price)
				</th>
				<th></th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Genre.Name)
					</td>
					<td>
						@Truncate(item.Artist.Name, 25)
					</td>
					<td>
						@Truncate(item.Title, 25)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Price)
					</td>
					<td>
						<input type="button" class="btn btn-sm btn-warning" value="Sửa" onclick="location.href='@Url.Action("Edit", new { id = item.AlbumId })'" />
						<input type="button" class="btn btn-sm btn-info" value="Chi tiết" onclick="location.href='@Url.Action("Details",new { id = item.AlbumId })'" />
						<input type="button" class="btn btn-sm btn-danger" value="Xóa" onclick="location.href='@Url.Action("Delete",new { id = item.AlbumId })'" />
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>